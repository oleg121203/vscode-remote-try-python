// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
    "name": "Python Development Environment",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    "image": "mcr.microsoft.com/devcontainers/python:1-3.11",
    // Configure tool-specific properties.
    "customizations": {
        // Configure properties specific to VS Code.
        "vscode": {
            "settings": {
                "python.formatting.provider": "black",
                "editor.formatOnSave": true,
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.linting.flake8Enabled": false,
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "python.testing.nosetestsEnabled": false,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": true,
                    "source.fixAll": true
                },
                "python.analysis.typeCheckingMode": "strict",
                "python.analysis.autoImportCompletions": true,
                "github.copilot.enable": {
                    "*": true,
                    "yaml": true,
                    "plaintext": true,
                    "markdown": true
                },
                "github.copilot.inlineSuggest.enable": true,
                "python.linting.mypyEnabled": true,
                "python.linting.banditEnabled": true,
                "isort.args": [
                    "--profile",
                    "black"
                ],
                "python.linting.pylintArgs": [
                    "--enable=all",
                    "--disable=C0111",
                    "--disable=C0103",
                    "--disable=C0114,C0115,C0116"
                ],
                "python.formatting.blackArgs": [
                    "--line-length=88",
                    "--target-version=py311"
                ],
                "python.analysis.diagnosticMode": "workspace",
                "python.analysis.indexing": true,
                "python.analysis.autoSearchPaths": true,
                "python.testing.pytestArgs": [
                    "tests",
                    "-v",
                    "--cov"
                ],
                "sourcery.token": "user_provided_token",
                "files.trimTrailingWhitespace": true,
                "files.insertFinalNewline": true,
                "editor.defaultFormatter": "ms-python.black-formatter",
                "editor.formatOnPaste": true,
                "editor.formatOnType": true,
                "editor.suggestSelection": "first",
                "python.analysis.completeFunctionParens": true,
                "files.autoSave": "afterDelay",
                "files.autoSaveDelay": 1000,
                "tabnine.experimentalAutoImports": true
            },
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.pylint",
                "ms-python.black-formatter",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "VisualStudioExptTeam.vscodeintellicode",
                "ms-python.debugpy",
                "ms-toolsai.jupyter",
                "donjayamanne.python-environment-manager",
                "njpwerner.autodocstring",
                "TabNine.tabnine-vscode",
                "LittleFoxTeam.vscode-python-test-adapter",
                "mhutchie.python-refactor",
                "kevinrose.vsc-python-indent",
                "aaron-bond.better-comments",
                "formulahendry.code-runner",
                "ryanluker.vscode-coverage-gutters",
                "sourcery.sourcery",
                "ms-toolsai.jupyter-keymap",
                "ms-toolsai.jupyter-renderers",
                "yzhang.markdown-all-in-one",
                "bierner.markdown-preview-github-styles",
                "ms-python.isort",
                "ms-python.flake8",
                "matangover.mypy",
                "sourcegraph.sourcegraph",
                "eamodio.gitlens",
                "ms-azuretools.vscode-docker",
                "streetsidesoftware.code-spell-checker",
                "gruntfuggly.todo-tree",
                "davidanson.vscode-markdownlint"
            ],
            "type": "command",
            "commands": {
                "command": "python.setInterpreter"
            }
        }
    },
    "features": {
        "ghcr.io/devcontainers/features/python:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {}
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [9000],
    // Use 'portsAttributes' to set default properties for specific forwarded ports.
    // More info: https://containers.dev/implementors/json_reference/#port-attributes
    "portsAttributes": {
        "9000": {
            "label": "Hello Remote World",
            "onAutoForward": "notify"
        }
    },
    // Команда выполняется каждый раз при подключении к контейнеру (включая reopen)
    "postAttachCommand": "bash -c 'sleep 10 && echo \"{\\\"command\\\":\\\"Tabnine.signin\\\",\\\"args\\\":[\\\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS9nb29nbGUuaWRlbnRpdHkuaWRlbnRpdHl0b29sa2l0LnYxLklkZW50aXR5VG9vbGtpdCIsImlhdCI6MTczMjE3Mzc5OSwiZXhwIjoxNzMyMTc3Mzk5LCJpc3MiOiJmaXJlYmFzZS1hZG1pbnNkay02cjM0eUB0YWJuaW5lLWF1dGgtMzQwMDE1LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwic3ViIjoiZmlyZWJhc2UtYWRtaW5zZGstNnIzNHlAdGFibmluZS1hdXRoLTM0MDAxNS5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInVpZCI6IkVYbW5xbzNHOVJOTlA0dzg3ZG5hS3JZWmtSQTIifQ.VJNZOmTVlJAnREfhGgyH3hYKblMTvDUfdYsNl9dRWVctU1Tnhv3juVNgZIENny4iaRDYe9lXcoJZsu85IGsQfxNEfSCwA458EM6q1203x1j8hFPYijR_9dUPfH0oEA_3uJx8sdkW8KHO4Ng7kHdGSbDO6_jA2H2YGQrmLJvFknn0JrZW9dXcuI4wCH5TQVID4phbeKR3V4s6m_iY7dPwsrVpB2V9_oXoeXDVzpe2cLaSicPXf03JXkQk54tLz2CNvOSXIklxuiODjtuAe8vblmufUN3gJfQ0yMrqyXgv8WYB72TTz9DNZJSpiDSrngQkndIqfWKH88L9J0xy-8Cs2w\\\"]}\" > $HOME/.vscode-server/data/Machine/tabnine-signin.json && python -m pip install --upgrade pip && pip install -r requirements.txt && pip install -r requirements-dev.txt'",

    // Существующая команда postCreateCommand остается для первичной настройки
    "postCreateCommand": "python -m pip install --upgrade pip && pip install -r requirements.txt && pip install -r requirements-dev.txt && pre-commit install && git config --global alias.autocommit '!f() { git add . && git commit -m \"Auto-commit $(date \"+%Y-%m-%d %H:%M:%S\")\" && git push; }; f'",

    // Add updateContentCommand for re-installing dependencies on reopen
    "updateContentCommand": "python -m pip install --upgrade pip && pip install -r requirements.txt && pip install -r requirements-dev.txt",

    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    "remoteUser": "vscode"
}
